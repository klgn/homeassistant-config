---
name: Energy price
unique_id: energy_price
state: |
  {% set _now = this.attributes.today | selectattr('hour_only', '==', now().timestamp() | timestamp_custom("%H")) | list %}
  {% if _now | length > 0 %}
    {{ _now[0]['price'] | round(3) }}
  {% else %}
    unavailable
  {% endif %}
attributes:
  # https://developers.home-assistant.io/docs/core/entity/sensor/
  unit_of_measurement: "DKK/kWh"
  today: |
    {% set ns = namespace(list=[]) %}
    {% set raw = state_attr('sensor.energy_price_raw', 'records') | selectattr('HourDK', 'search', now().timestamp() | timestamp_custom('%Y-%m-%dT')) | list %}
    {% for r in raw %}
      {%
      set ns.list = ns.list + [{
        "time": r.HourDK,
        "hour_only": r.HourDK | as_timestamp | timestamp_custom("%H", true),
        "hour_minute": r.HourDK | as_timestamp | timestamp_custom("%H:%M", true),
        "price": (((r.SpotPriceDKK / 1000) * 1.25) + states('input_number.energy_price_additional_cost') | default(0) | float(0)) | round(3),
      }]
      %}
    {% endfor %}
    {{ ns.list }}
  today_min: |
    {% set _list = this.attributes.today | default([], true) |list %}
    {% if _list | length > 0 %}
      {{ _list | min(attribute='price') }}
    {% endif %}
  today_max: |
    {% set _list = this.attributes.today | default([], true) | list %}
    {% if _list | length > 0 %}
      {{ _list | max(attribute='price') }}
    {% endif %}
  today_avg_price: >
    {% set _list = this.attributes.today | default([], true) | map(attribute='price') | list %}
    {% if _list | length > 0 %}
      {{ _list | average | round(3) }}
    {% endif %}
  tomorrow: |
    {% set ns = namespace(list=[]) %}
    {% set raw = state_attr('sensor.energy_price_raw', 'records') | selectattr('HourDK', 'search', (now() + timedelta(days = 1)).timestamp() | timestamp_custom('%Y-%m-%dT')) | list %}
    {% for r in raw %}
      {%
      set ns.list = ns.list + [{
        "time": r.HourDK,
        "hour_only": r.HourDK | as_timestamp | timestamp_custom("%H", true),
        "hour_minute": r.HourDK | as_timestamp | timestamp_custom("%H:%M", true),
        "price": (((r.SpotPriceDKK / 1000) * 1.25) + states('input_number.energy_price_additional_cost') | default(0) | float(0)) | round(3),
      }]
      %}
    {% endfor %}
    {{ ns.list }}
  tomorrow_min: |
    {% set _list = this.attributes.tomorrow | default([], true) | list %}
    {% if _list | length > 0 %}
      {{ _list | min(attribute='price') }}
    {% endif %}
  tomorrow_max: |
    {% set _list = this.attributes.tomorrow | default([], true) | list %}
    {% if _list | length > 0 %}
      {{ _list | max(attribute='price') }}
    {% endif %}
  tomorrow_avg_price: >
    {% set _list = this.attributes.tomorrow | default([], true) | map(attribute='price') | list %}
    {% if _list | length > 0 %}
      {{ _list | average | round(3) }}
    {% endif %}
  cheapest_3_hour_interval: >
    {% set period = state_attr('sensor.energy_price', 'today') %}
    {% if state_attr('sensor.energy_price', 'tomorrow') | length > 1 %} 
      {% set period = period + state_attr('sensor.energy_price', 'tomorrow') %}
    {% endif %}
    {% set ns = namespace(slices=[]) %}
    {% for i in range(now().hour, period | length) %}
        {%
        set el = {
          "index": i, 
          "hours": period[i:i + 3],
          "sum": period[i:i + 3] | sum(attribute='price') | round(3)
        }
        %}
        {% if el.hours | length == 3 %}
          {% set ns.slices = ns.slices + [el] %}
        {% endif %}
    {% endfor %} 
    {{ ns.slices | sort(attribute='sum') | first }}
  today_cheapest_3_hour_interval: >
    {% set period = state_attr('sensor.energy_price', 'today') %}
    {% set ns = namespace(slices=[]) %}
    {% for i in range(now().hour, period | length) %}
        {%
        set el = {
          "index": i, 
          "hours": period[i:i + 3],
          "sum": period[i:i + 3] | sum(attribute='price') | round(3)
        }
        %}
        {% if el.hours | length == 3 %}
          {% set ns.slices = ns.slices + [el] %}
        {% endif %}
    {% endfor %} 
    {{ ns.slices | sort(attribute='sum') | first }}
  tomorrow_cheapest_3_hour_interval: >
    {% if state_attr('sensor.energy_price', 'tomorrow') | length > 1 %} 
      {% set period = state_attr('sensor.energy_price', 'tomorrow') %}
      {% set ns = namespace(slices=[]) %}
      {% for i in range(0, period | length) %}
          {%
          set el = {
            "index": i, 
            "hours": period[i:i + 3],
            "sum": period[i:i + 3] | sum(attribute='price') | round(3)
          }
          %}
          {% if el.hours | length == 3 %}
            {% set ns.slices = ns.slices + [el] %}
          {% endif %}
      {% endfor %} 
      {{ ns.slices | sort(attribute='sum') | first }}
    {% else %}
      {{ unavailable }}
    {% endif %}
  cheapest_6_hour_interval: >
    {% set period = state_attr('sensor.energy_price', 'today') %}
    {% if state_attr('sensor.energy_price', 'tomorrow') | length > 1 %} 
      {% set period = period + state_attr('sensor.energy_price', 'tomorrow') %}
    {% endif %}
    {% set ns = namespace(slices=[]) %}
    {% for i in range(now().hour, period | length) %}
        {%
        set el = {
          "index": i, 
          "hours": period[i:i + 6],
          "sum": period[i:i + 6] | sum(attribute='price') | round(3)
        }
        %}
        {% if el.hours | length == 6 %}
          {% set ns.slices = ns.slices + [el] %}
        {% endif %}
    {% endfor %} 
    {{ ns.slices | sort(attribute='sum') | first }}
