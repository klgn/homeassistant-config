---
name: Energy Prices
unique_id: energy_prices
state: |
  {{ states.sensor.energi_data_service.state }}
attributes:
  phone_charge_prices: >
    {% set period = state_attr('sensor.energi_data_service', 'raw_today') %}
    {% if state_attr('sensor.energi_data_service', 'raw_tomorrow') %}
      {% set period = period + state_attr('sensor.energi_data_service', 'raw_tomorrow') %}
    {% endif %}
    {% set length = now().hour + 12 %}
    {% if length > period | length %}
      {% set length = period | length %}
    {% endif %}
    {% set ns = namespace(slices=[], result=[]) %}
    {% for i in range(now().hour, length) %}
      {%
      set ns.slices = ns.slices + [{
        "index": i,
        "hours": period[i:i + 2],
        "sum": period[i:i + 2] | sum(attribute='price') | round(3),
        "_size": period[i:i + 2] | length,
      }]
      %}
    {% endfor %}
    {% for el in ns.slices | rejectattr('_size', '<', 2) %}
      {% set ns.result = ns.result + [{'start': as_timestamp(el['hours'][0]['hour']) | timestamp_local, 'end': as_timestamp((el['hours'][0]['hour']) + timedelta(hours=2)) | timestamp_local, 'price': el['sum'] | round(2)}] %}
    {% endfor %}
    {{ns.result}}
  recommended_phone_charge_start: >
    {% set el = this.attributes.phone_charge_prices | sort (attribute='price') | first %}
    {{ as_timestamp(el['start']) | timestamp_local('%H:%M')}}
  recommended_phone_charge_end: >
    {% set el = this.attributes.phone_charge_prices | sort (attribute='price') | first %}
    {{ as_timestamp(el['end']) | timestamp_local('%H:%M')}}
